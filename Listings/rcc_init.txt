; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\rcc_init.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\rcc_init.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\0000 -I.\CMSIS\inc -I.\USER\inc -ID:\!Couds\YandexDisk\STM32\Learn_FreeRTOS\0000\RTE -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=520 -DSTM32F407xx -DSTM32F407xx --omf_browse=.\objects\rcc_init.crf USER\src\rcc_init.c]
                          THUMB

                          AREA ||i.MCO_Init||, CODE, READONLY, ALIGN=2

                  MCO_Init PROC
;;;46     
;;;47     void MCO_Init(void)
000000  4810              LDR      r0,|L1.68|
;;;48     {
;;;49       
;;;50     	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
000002  6800              LDR      r0,[r0,#0]
000004  f0400004          ORR      r0,r0,#4
000008  490e              LDR      r1,|L1.68|
00000a  6008              STR      r0,[r1,#0]
;;;51     	GPIOC->MODER &=~ GPIO_MODER_MODE9;
00000c  480e              LDR      r0,|L1.72|
00000e  6800              LDR      r0,[r0,#0]
000010  f4202040          BIC      r0,r0,#0xc0000
000014  490c              LDR      r1,|L1.72|
000016  6008              STR      r0,[r1,#0]
;;;52     	GPIOC->MODER |= GPIO_MODER_MODE9_1;
000018  4608              MOV      r0,r1
00001a  6800              LDR      r0,[r0,#0]
00001c  f4402000          ORR      r0,r0,#0x80000
000020  6008              STR      r0,[r1,#0]
;;;53     	GPIOC->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR9;
000022  4809              LDR      r0,|L1.72|
000024  3008              ADDS     r0,r0,#8
000026  6800              LDR      r0,[r0,#0]
000028  f4402040          ORR      r0,r0,#0xc0000
00002c  4906              LDR      r1,|L1.72|
00002e  3108              ADDS     r1,r1,#8
000030  6008              STR      r0,[r1,#0]
;;;54     	RCC->CFGR |= RCC_CFGR_MCO2PRE;
000032  4804              LDR      r0,|L1.68|
000034  3828              SUBS     r0,r0,#0x28
000036  6800              LDR      r0,[r0,#0]
000038  f0405060          ORR      r0,r0,#0x38000000
00003c  4901              LDR      r1,|L1.68|
00003e  3928              SUBS     r1,r1,#0x28
000040  6008              STR      r0,[r1,#0]
;;;55     
;;;56     }
000042  4770              BX       lr
                          ENDP

                  |L1.68|
                          DCD      0x40023830
                  |L1.72|
                          DCD      0x40020800

                          AREA ||i.RCC_Init||, CODE, READONLY, ALIGN=2

                  RCC_Init PROC
;;;8      /* ================================== Configure RCC ================================== */
;;;9      void RCC_Init(void){ 
000000  483f              LDR      r0,|L2.256|
;;;10     	
;;;11     	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLM_Msk;
000002  6800              LDR      r0,[r0,#0]
000004  f020003f          BIC      r0,r0,#0x3f
000008  493d              LDR      r1,|L2.256|
00000a  6008              STR      r0,[r1,#0]
;;;12     	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLN_Msk;
00000c  4608              MOV      r0,r1
00000e  6800              LDR      r0,[r0,#0]
000010  f64771c0          MOV      r1,#0x7fc0
000014  4388              BICS     r0,r0,r1
000016  493a              LDR      r1,|L2.256|
000018  6008              STR      r0,[r1,#0]
;;;13     	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLP_Msk;
00001a  4608              MOV      r0,r1
00001c  6800              LDR      r0,[r0,#0]
00001e  f4203040          BIC      r0,r0,#0x30000
000022  6008              STR      r0,[r1,#0]
;;;14     	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLQ_Msk;
000024  4608              MOV      r0,r1
000026  6800              LDR      r0,[r0,#0]
000028  f0206070          BIC      r0,r0,#0xf000000
00002c  6008              STR      r0,[r1,#0]
;;;15     	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLSRC_Msk;
00002e  4608              MOV      r0,r1
000030  6800              LDR      r0,[r0,#0]
000032  f4200080          BIC      r0,r0,#0x400000
000036  6008              STR      r0,[r1,#0]
;;;16     
;;;17     	RCC->CR |= RCC_CR_HSEON;																		// Enable HSE
000038  1f08              SUBS     r0,r1,#4
00003a  6800              LDR      r0,[r0,#0]
00003c  f4403080          ORR      r0,r0,#0x10000
000040  1f09              SUBS     r1,r1,#4
000042  6008              STR      r0,[r1,#0]
;;;18     	while (!(RCC->CR & RCC_CR_HSERDY)) {};											// Wait for ready HSE
000044  bf00              NOP      
                  |L2.70|
000046  482e              LDR      r0,|L2.256|
000048  1f00              SUBS     r0,r0,#4
00004a  6800              LDR      r0,[r0,#0]
00004c  f4003000          AND      r0,r0,#0x20000
000050  2800              CMP      r0,#0
000052  d0f8              BEQ      |L2.70|
;;;19     		
;;;20     	RCC->CFGR |= RCC_CFGR_HPRE_DIV1;														// AHB = SYSCLK/1 = 168MHz
000054  482a              LDR      r0,|L2.256|
000056  1d00              ADDS     r0,r0,#4
000058  6800              LDR      r0,[r0,#0]
00005a  4929              LDR      r1,|L2.256|
00005c  1d09              ADDS     r1,r1,#4
00005e  6008              STR      r0,[r1,#0]
;;;21     	RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;														// APB1 = HCLK/4 (PCLK1 = 42 MHz, APB1 Timers = 84 MHz)
000060  4608              MOV      r0,r1
000062  6800              LDR      r0,[r0,#0]
000064  f44050a0          ORR      r0,r0,#0x1400
000068  6008              STR      r0,[r1,#0]
;;;22     	RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;														// APB2 = HCLK/2 (PCLK2 = 84 MHz, APB2 Timers = 168 MHz)
00006a  4608              MOV      r0,r1
00006c  6800              LDR      r0,[r0,#0]
00006e  f4404000          ORR      r0,r0,#0x8000
000072  6008              STR      r0,[r1,#0]
;;;23     	
;;;24     	RCC->PLLCFGR |= RCC_PLLCFGR_PLLM_3;													// PLLM = 8
000074  1f08              SUBS     r0,r1,#4
000076  6800              LDR      r0,[r0,#0]
000078  f0400008          ORR      r0,r0,#8
00007c  1f09              SUBS     r1,r1,#4
00007e  6008              STR      r0,[r1,#0]
;;;25     	RCC->PLLCFGR |= (RCC_PLLCFGR_PLLN_4 | RCC_PLLCFGR_PLLN_6 
000080  4608              MOV      r0,r1
000082  6800              LDR      r0,[r0,#0]
000084  f44040a8          ORR      r0,r0,#0x5400
000088  6008              STR      r0,[r1,#0]
;;;26     																		  | RCC_PLLCFGR_PLLN_8); 	// PLLN = 336
;;;27     		
;;;28     	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLP;													// PLLP = 2
00008a  4608              MOV      r0,r1
00008c  6800              LDR      r0,[r0,#0]
00008e  f4203040          BIC      r0,r0,#0x30000
000092  6008              STR      r0,[r1,#0]
;;;29     		
;;;30     	RCC->PLLCFGR |= RCC_PLLCFGR_PLLSRC;													// HSE oscillator clock selected as PLL and PLLI2S clock entry
000094  4608              MOV      r0,r1
000096  6800              LDR      r0,[r0,#0]
000098  f4400080          ORR      r0,r0,#0x400000
00009c  6008              STR      r0,[r1,#0]
;;;31     		
;;;32     	RCC->PLLCFGR |= (RCC_PLLCFGR_PLLQ_0 | RCC_PLLCFGR_PLLQ_1
00009e  4608              MOV      r0,r1
0000a0  6800              LDR      r0,[r0,#0]
0000a2  f04060e0          ORR      r0,r0,#0x7000000
0000a6  6008              STR      r0,[r1,#0]
;;;33     																		  | RCC_PLLCFGR_PLLQ_2);	// PLLQ = 7
;;;34     	
;;;35     	RCC->CR |= RCC_CR_PLLON;                      							// Enable PLL
0000a8  1f08              SUBS     r0,r1,#4
0000aa  6800              LDR      r0,[r0,#0]
0000ac  f0407080          ORR      r0,r0,#0x1000000
0000b0  1f09              SUBS     r1,r1,#4
0000b2  6008              STR      r0,[r1,#0]
;;;36     	while(!(RCC->CR & RCC_CR_PLLRDY)) {}      									// Wait till PLL is ready
0000b4  bf00              NOP      
                  |L2.182|
0000b6  4812              LDR      r0,|L2.256|
0000b8  1f00              SUBS     r0,r0,#4
0000ba  6800              LDR      r0,[r0,#0]
0000bc  f0007000          AND      r0,r0,#0x2000000
0000c0  2800              CMP      r0,#0
0000c2  d0f8              BEQ      |L2.182|
;;;37     		
;;;38     	FLASH->ACR |= FLASH_ACR_ICEN | FLASH_ACR_DCEN 
0000c4  480f              LDR      r0,|L2.260|
0000c6  6800              LDR      r0,[r0,#0]
0000c8  f2407105          MOV      r1,#0x705
0000cc  4308              ORRS     r0,r0,r1
0000ce  490d              LDR      r1,|L2.260|
0000d0  6008              STR      r0,[r1,#0]
;;;39     						 | FLASH_ACR_LATENCY_5WS | FLASH_ACR_PRFTEN;			// Cloclk Flash memory
;;;40     
;;;41     	RCC->CFGR &= ~RCC_CFGR_SW;
0000d2  480b              LDR      r0,|L2.256|
0000d4  1d00              ADDS     r0,r0,#4
0000d6  6800              LDR      r0,[r0,#0]
0000d8  f0200003          BIC      r0,r0,#3
0000dc  4908              LDR      r1,|L2.256|
0000de  1d09              ADDS     r1,r1,#4
0000e0  6008              STR      r0,[r1,#0]
;;;42     	RCC->CFGR |= RCC_CFGR_SW_PLL;																// PLL selected as system clock	
0000e2  4608              MOV      r0,r1
0000e4  6800              LDR      r0,[r0,#0]
0000e6  f0400002          ORR      r0,r0,#2
0000ea  6008              STR      r0,[r1,#0]
;;;43     	while (!(RCC->CFGR & RCC_CFGR_SWS_PLL)) {}									// Wait for PLL/PLLP used as system clock
0000ec  bf00              NOP      
                  |L2.238|
0000ee  4804              LDR      r0,|L2.256|
0000f0  1d00              ADDS     r0,r0,#4
0000f2  6800              LDR      r0,[r0,#0]
0000f4  f0000008          AND      r0,r0,#8
0000f8  2800              CMP      r0,#0
0000fa  d0f8              BEQ      |L2.238|
;;;44     		
;;;45     }
0000fc  4770              BX       lr
;;;46     
                          ENDP

0000fe  0000              DCW      0x0000
                  |L2.256|
                          DCD      0x40023804
                  |L2.260|
                          DCD      0x40023c00

;*** Start embedded assembler ***

#line 1 "USER\\src\\rcc_init.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_rcc_init_c_RCC_Init____REV16|
#line 388 ".\\CMSIS\\inc\\cmsis_armcc.h"
|__asm___10_rcc_init_c_RCC_Init____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_rcc_init_c_RCC_Init____REVSH|
#line 402
|__asm___10_rcc_init_c_RCC_Init____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_rcc_init_c_RCC_Init____RRX|
#line 587
|__asm___10_rcc_init_c_RCC_Init____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
